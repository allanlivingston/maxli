export interface DBOrder {
  privateid: string; // Required in the database
  orderid: string;
  stripeSessionId: string;
  userid: string;
  items: OrderItem[];
  total: number;
  status: OrderStatus;
  shippingAddress?: string;
  created_at: Date;
  shippingCost: number; // Add this line
}

export interface Order {
  privateid?: string; // Optional, as it's generated by the database
  orderid: string;
  stripeSessionId: string;
  userid: string;
  items: OrderItem[];
  total: number;
  status: OrderStatus;
  shippingAddress?: string;
  created_at?: Date; // Changed from create_at to created_at
  stripeReceiptUrl?: string; // Add this new property
  shippingCost: number; // Add this line
}

export interface OrderItem {
  id: number;
  name: string;
  price: number; // Ensure this is defined as a number
  quantity: number; // Ensure this is defined as a number
  capacity?: string;
  icon?: any;
  type?: string;
  imageName?: string;
  imagePath?: string;
  // Keep the price_data structure for compatibility with existing code
  price_data?: {
    product_data?: {
      name?: string;
    };
    unit_amount?: number;
  };
}

export type OrderStatus = 'cart' |'pending' | 'paid' | 'cancelled' | 'shipped' | 'delivered';

export interface ShippingAddress {
  line1: string;
  line2?: string;
  city: string;
  state: string;
  postal_code: string;
  country: string;
}
